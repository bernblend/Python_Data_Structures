Structured Data:


We have functioned with the 'string' data type.
    - A series of characters inside of quotation marks.


Now we look at the 'list' data type:
    - Elements can be string, int, or another 'list'.
    - Placed in brackets [ ] separated by commas.



Mutation:
  - Lists support Mutation. This means we can change the
  value of a list after it's created.

    s = 'Yello'
    s = s + 'w'
    The above does NOT modify the current string but instead
    creates a new list.
    OUTPUT: YELLOW
    and 's' refers to this new string.



Aliasing:
  - Having two different ways to refer to an object.




List Operation:
  .append()
    - Used as      <list>.append(<element>)
      This will add an element to the end of a list.
      This is a mutation to the existing list,
      it's NOT creating a new list.


  '+' operator
    - Used as      <list> + <list>
      Ex:
        [0,1] + [2,3]  ->   [0,1,2,3]

  len operator
    - Short for length, used as       len(<list>)
      Works on strings or any object that is a collection of things.
      OUTPUT is the number of elements in the input.
        Ex:
          len([0,1])   ->   2 elements

          len(['a',['b', ['c']]])    -> 2
          NOTE: it only looks at the outer elements.

    - Using len() on a string
        Ex:
          len("Udacity")  ->  7
          NOTE: this shows how many characters are in the list.


Concept Breakdown:

1. Structured Data:
  We have covered data in the form of a string and a list.
    Strings: must be characters.
    Lists: can be anything (characters, numbers, other lists).


2: Mutability:
  A 'list' is mutable, meaning it CAN be mutated, and a
  'string' is immutable, meaning it CANNOT be mutated.


3. The difference between append and '+':
  The '+' is used for concatenation, this also creates
  a new string or list.
  While 'append' is used to mutate a list and does NOT
  create a new list.
